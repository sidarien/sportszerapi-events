package sportszer.api.events.bean;

import java.util.Date;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBNativeBoolean;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A Sportszer Event
 * 
 * @author Siddharth Pandey
 * @since May 20, 2016
 */
@ApiModel(value = "Event", description = "A Sportszer Event")
@DynamoDBTable(tableName = "Event")
public class Event {

	@DynamoDBHashKey
	@DynamoDBAutoGeneratedKey
	private String eventId;

	@ApiModelProperty(value = "Event name", required = true)
	@DynamoDBAttribute
	private String name;

	@ApiModelProperty(value = "Event description", required = true)
	@DynamoDBAttribute
	private String description;

	@ApiModelProperty(value = "Event session", required = true)
	@DynamoDBAttribute
	private String session;

	@ApiModelProperty(value = "Indicator to identify if event is public", required = false)
	@DynamoDBAttribute
	@DynamoDBNativeBoolean
	private boolean publicInd;

	@ApiModelProperty(value = "Event location", required = false)
	@DynamoDBAttribute
	private EventLocation location;

	@ApiModelProperty(value = "Event start date", required = false)
	@DynamoDBAttribute
	private Date startDate;

	@ApiModelProperty(value = "Event end date", required = false)
	@DynamoDBAttribute
	private Date endDate;

	@ApiModelProperty(value = "Event start time", required = false)
	@DynamoDBAttribute
	private String startTime;

	@ApiModelProperty(value = "Event end time", required = false)
	@DynamoDBAttribute
	private String endTime;

	@ApiModelProperty(value = "Event recurrence", required = false)
	@DynamoDBAttribute
	private EventRecurrence recurrence;

	@ApiModelProperty(value = "Organization Id", required = true)
	@DynamoDBAttribute
	private String organizationId;

	public Event() {
	}

	public Event(String name, String description, String session, boolean publicInd,
			EventLocation location, Date startDate, Date endDate, String startTime, String endTime,
			EventRecurrence recurrence, String organizationId) {			
		this.name = name;
		this.description = description;
		this.session = session;
		this.publicInd = publicInd;
		this.location = location;
		this.startDate = startDate;
		this.endDate = endDate;
		this.startTime = startTime;
		this.endTime = endTime;
		this.recurrence = recurrence;
		this.organizationId = organizationId;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getSession() {
		return session;
	}

	public void setSession(String session) {
		this.session = session;
	}

	public boolean isPublicInd() {
		return publicInd;
	}

	public void setPublicInd(boolean publicInd) {
		this.publicInd = publicInd;
	}

	public EventLocation getLocation() {
		return location;
	}

	public void setLocation(EventLocation location) {
		this.location = location;
	}

	public Date getStartDate() {
		return startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	public Date getEndDate() {
		return endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	public String getStartTime() {
		return startTime;
	}

	public void setStartTime(String startTime) {
		this.startTime = startTime;
	}

	public String getEndTime() {
		return endTime;
	}

	public void setEndTime(String endTime) {
		this.endTime = endTime;
	}

	public EventRecurrence getRecurrence() {
		return recurrence;
	}

	public void setRecurrence(EventRecurrence recurrence) {
		this.recurrence = recurrence;
	}

	public String getEventId() {
		return eventId;
	}

	public void setEventId(String eventId) {
		this.eventId = eventId;
	}

	public String getOrganizationId() {
		return organizationId;
	}

	public void setOrganizationId(String organizationId) {
		this.organizationId = organizationId;
	}

	@Override
	public String toString() {
		return "Event [eventId=" + eventId + ", name=" + name + ", description=" + description + ", session=" + session
				+ ", publicInd=" + publicInd + ", location=" + location + ", startDate=" + startDate + ", endDate="
				+ endDate + ", startTime=" + startTime + ", endTime=" + endTime + ", recurrence=" + recurrence
				+ ", organizationId=" + organizationId + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((description == null) ? 0 : description.hashCode());
		result = prime * result + ((endDate == null) ? 0 : endDate.hashCode());
		result = prime * result + ((endTime == null) ? 0 : endTime.hashCode());
		result = prime * result + ((eventId == null) ? 0 : eventId.hashCode());
		result = prime * result + ((location == null) ? 0 : location.hashCode());
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + ((organizationId == null) ? 0 : organizationId.hashCode());
		result = prime * result + (publicInd ? 1231 : 1237);
		result = prime * result + ((recurrence == null) ? 0 : recurrence.hashCode());
		result = prime * result + ((session == null) ? 0 : session.hashCode());
		result = prime * result + ((startDate == null) ? 0 : startDate.hashCode());
		result = prime * result + ((startTime == null) ? 0 : startTime.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Event other = (Event) obj;
		if (description == null) {
			if (other.description != null)
				return false;
		} else if (!description.equals(other.description))
			return false;
		if (endDate == null) {
			if (other.endDate != null)
				return false;
		} else if (!endDate.equals(other.endDate))
			return false;
		if (endTime == null) {
			if (other.endTime != null)
				return false;
		} else if (!endTime.equals(other.endTime))
			return false;
		if (eventId == null) {
			if (other.eventId != null)
				return false;
		} else if (!eventId.equals(other.eventId))
			return false;
		if (location == null) {
			if (other.location != null)
				return false;
		} else if (!location.equals(other.location))
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (organizationId == null) {
			if (other.organizationId != null)
				return false;
		} else if (!organizationId.equals(other.organizationId))
			return false;
		if (publicInd != other.publicInd)
			return false;
		if (recurrence == null) {
			if (other.recurrence != null)
				return false;
		} else if (!recurrence.equals(other.recurrence))
			return false;
		if (session == null) {
			if (other.session != null)
				return false;
		} else if (!session.equals(other.session))
			return false;
		if (startDate == null) {
			if (other.startDate != null)
				return false;
		} else if (!startDate.equals(other.startDate))
			return false;
		if (startTime == null) {
			if (other.startTime != null)
				return false;
		} else if (!startTime.equals(other.startTime))
			return false;
		return true;
	}
}
